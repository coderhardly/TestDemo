//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CountrySideHappyEntities2 : DbContext
    {
        public CountrySideHappyEntities2()
            : base("name=CountrySideHappyEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Carts> Carts { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<MyFavorite> MyFavorite { get; set; }
        public virtual DbSet<OrderDetail> OrderDetail { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Praise> Praise { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Remark> Remark { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Message> Message { get; set; }
    
        public virtual int Usp_ComPleteOrder(Nullable<int> orderId, Nullable<int> userId, string address, string userPhone, Nullable<int> subtotal, ObjectParameter totalmoney)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("userPhone", userPhone) :
                new ObjectParameter("userPhone", typeof(string));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ComPleteOrder", orderIdParameter, userIdParameter, addressParameter, userPhoneParameter, subtotalParameter, totalmoney);
        }
    
        public virtual int Usp_ComPleteOrder1(Nullable<int> orderId, Nullable<int> userId, string address, string userPhone, Nullable<int> totalmoney)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("userPhone", userPhone) :
                new ObjectParameter("userPhone", typeof(string));
    
            var totalmoneyParameter = totalmoney.HasValue ?
                new ObjectParameter("totalmoney", totalmoney) :
                new ObjectParameter("totalmoney", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_ComPleteOrder1", orderIdParameter, userIdParameter, addressParameter, userPhoneParameter, totalmoneyParameter);
        }
    }
}
